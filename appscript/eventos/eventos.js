/**
 * Google Apps Script para manejar las cotizaciones de eventos de Finca Term√≥pilas
 * Este script unificado recibe datos de todos los tipos de eventos y los guarda en una hoja de c√°lculo
 * Tambi√©n env√≠a notificaciones por correo electr√≥nico personalizadas seg√∫n el tipo de evento
 */

/**
 * Funci√≥n para parsear datos de formulario URL-encoded
 * Compatible con Google Apps Script (no usa URLSearchParams)
 */
function parseFormData(formDataString) {
  const data = {};
  if (!formDataString) return data;
  
  const pairs = formDataString.split('&');
  for (const pair of pairs) {
    const [key, value] = pair.split('=');
    if (key && value !== undefined) {
      data[decodeURIComponent(key)] = decodeURIComponent(value.replace(/\+/g, ' '));
    }
  }
  return data;
}

// Funci√≥n que se ejecuta cuando se recibe una solicitud GET o POST
function doGet(e) {
  return handleRequest(e);
}

function doPost(e) {
  return handleRequest(e);
}

function handleRequest(e) {
  try {
    // ID de la hoja de c√°lculo (reemplazar con el ID real cuando se cree)
    const spreadsheetId = "1Jiiqh0ILo0Y142ulrHroqZsBQ4PZq7tm3wpiu-tBEpY";
    const sheet = SpreadsheetApp.openById(spreadsheetId).getActiveSheet();
    
    // Procesar los datos recibidos
    let data;
    
    // Check if data is coming from URL parameters or from the payload
    if (e.parameter && Object.keys(e.parameter).length > 0) {
      data = e.parameter;
    } else if (e.postData && e.postData.contents) {
      data = parseFormData(e.postData.contents);
    } else {
      // Return an HTML page with error message
      return HtmlService.createHtmlOutput(generateErrorPage());
    }
    
    // Crear una marca de tiempo para la solicitud
    const timestamp = new Date();
    
    // Configurar encabezados si la hoja est√° vac√≠a
    if (sheet.getLastRow() === 0) {
      sheet.appendRow([
        'Timestamp',
        'Tipo de Evento',
        'Nombres/Organizaci√≥n',
        'Informaci√≥n Adicional',
        'Email',
        'Tel√©fono',
        'Fecha del Evento',
        'Hora del Evento',
        'N√∫mero de Invitados',
        'Servicios Adicionales',
        'Presupuesto',
        'Requiere Alojamiento',
        'Requiere Alimentaci√≥n',
        'Requiere Mobiliario',
        'Requiere Planeador',
        'Requiere Decoraci√≥n',
        'Requiere Sonido',
        'Requiere Fotograf√≠a',
        'Requiere Audiovisuales',
        'Comentarios',
        'Detalles Espec√≠ficos'
      ]);
    }
    
    // Procesar informaci√≥n espec√≠fica seg√∫n el tipo de evento
    const tipoEvento = data.tipo_evento || 'No especificado';
    let nombres, infoAdicional, detallesEspecificos;
    
    // Debug: Log the received data to see what's coming through
    console.log('Received form data:', JSON.stringify(data));
    
    // Agregar los datos a la hoja
    const rowData = [
      timestamp,                          // Timestamp
      tipoEvento,                        // Tipo de evento
      data.nombres_organizacion || '',   // Nombres/Organizaci√≥n
      data.email || '',                  // Email
      data.telefono || '',               // Tel√©fono
      data.fecha_evento || '',           // Fecha del evento
      data.hora_evento || '',            // Hora del evento
      data.numero_invitados || '',       // N√∫mero de invitados
      data.servicios_adicionales || '',  // Servicios adicionales
      data.presupuesto || '',            // Presupuesto
      data.requiere_alojamiento || 'No', // Requiere alojamiento
      data.requiere_alimentacion || 'No',// Requiere alimentaci√≥n
      data.requiere_mobiliario || 'No',  // Requiere mobiliario
      data.requiere_planeador || 'No',   // Requiere planeador
      data.requiere_decoracion || 'No',  // Requiere decoraci√≥n
      data.requiere_sonido || 'No',      // Requiere sonido
      data.requiere_fotografia || 'No',  // Requiere fotograf√≠a
      data.requiere_audiovisuales || 'No', // Requiere audiovisuales
      data.comentarios || '',            // Comentarios
      detallesEspecificos                // Detalles espec√≠ficos del tipo de evento
    ];
    
    // Debug: Log the row data being saved
    console.log('Row data being saved:', rowData);
    console.log('Position 2 (Nombres/Organizaci√≥n):', rowData[2]);
    
    sheet.appendRow(rowData);
    
    // Enviar notificaci√≥n por correo electr√≥nico
    sendEventNotification(data, tipoEvento);
    
    // Retornar una p√°gina HTML de √©xito
    return HtmlService.createHtmlOutput(generateSuccessPage(data, tipoEvento));
    
  } catch (error) {
    // Log the error for debugging
    console.error('Error processing event quote request:', error);
    
    // Retornar una p√°gina HTML con el error
    return HtmlService.createHtmlOutput(generateErrorPage(error));
  }
}

/**
 * Funci√≥n para cargar plantilla HTML
 */
function loadTemplate(templateName) {
  try {
    const blob = DriveApp.getFilesByName(`${templateName}.html`).next();
    return blob.getBlob().getDataAsString();
  } catch (error) {
    console.error(`Error loading template ${templateName}:`, error);
    // Fallback b√°sico si no se puede cargar la plantilla
    return '<html><head><title>Error</title></head><body><h1>Error al cargar plantilla</h1></body></html>';
  }
}

/**
 * Funci√≥n para procesar plantilla con reemplazos
 */
function processTemplate(template, replacements) {
  let processedTemplate = template;
  for (const [key, value] of Object.entries(replacements)) {
    const placeholder = `{{${key}}}`;
    processedTemplate = processedTemplate.replace(new RegExp(placeholder, 'g'), value || '');
  }
  return processedTemplate;
}

/**
 * Funci√≥n para generar p√°gina de error
 */
function generateErrorPage(error = null) {
  const template = loadTemplate('error');
  
  let errorDetails = '';
  if (error) {
    errorDetails = `
    <div class="error-details">
      <p><strong>Detalles t√©cnicos:</strong></p>
      <p>Error: ${error.toString()}</p>
      <p>Tiempo: ${new Date().toLocaleString('es-CO')}</p>
    </div>`;
  }
  
  const replacements = {
    ERROR_DETAILS: errorDetails
  };
  
  return processTemplate(template, replacements);
}

/**
 * Funci√≥n para generar p√°gina de √©xito
 */
function generateSuccessPage(data, tipoEvento) {
  const template = loadTemplate('success');
  
  const eventIcons = {
    'boda': 'üíç',
    'quincea√±era': 'üëë',
    'retiro': 'üßò‚Äç‚ôÄÔ∏è',
    'evento corporativo': 'üè¢'
  };
  
  const eventColors = {
    'boda': '#F29F05',
    'quincea√±era': '#e91e63',
    'retiro': '#4caf50',
    'evento corporativo': '#2196f3'
  };
  
  const icon = eventIcons[tipoEvento.toLowerCase()] || 'üéâ';
  const color = eventColors[tipoEvento.toLowerCase()] || '#F29F05';
  
  // Priorizar el campo general nombres_organizacion
  const nombresGeneral = data.nombres_organizacion || '';
  
  let personalizacionTexto = '';
  switch (tipoEvento.toLowerCase()) {
    case 'boda':
      const nombresBoda = nombresGeneral || data.nombres_novios || 'queridos novios';
      personalizacionTexto = `Gracias <strong>${nombresBoda}</strong> por contactarnos para su d√≠a especial.`;
      break;
    case 'quince a√±os':
    case 'quincea√±era':
      const nombresQuince = nombresGeneral || data.nombre_quincea√±era || 'tu princesa';
      personalizacionTexto = `Gracias por contactarnos para la fiesta de 15 a√±os de <strong>${nombresQuince}</strong>.`;
      break;
    case 'retiro':
      const nombresRetiro = nombresGeneral || data.nombre_organizacion || 'estimado organizador';
      personalizacionTexto = `Gracias <strong>${nombresRetiro}</strong> por contactarnos para su retiro.`;
      break;
    case 'evento corporativo':
      const nombresCorporativo = nombresGeneral || data.nombre_empresa || 'estimado cliente';
      personalizacionTexto = `Gracias <strong>${nombresCorporativo}</strong> por contactarnos para su evento corporativo.`;
      break;
    default:
      const nombresDefault = nombresGeneral || 'estimado cliente';
      personalizacionTexto = `Gracias <strong>${nombresDefault}</strong> por contactarnos para su evento especial.`;
  }
  
  const replacements = {
    COLOR: color,
    ICON: icon,
    PERSONALIZATION_TEXT: personalizacionTexto
  };
  
  return processTemplate(template, replacements);
}

/**
 * Funci√≥n para enviar notificaci√≥n por correo electr√≥nico sobre la cotizaci√≥n de evento
 */
function sendEventNotification(data, tipoEvento) {
  try {
    // Email para recibir notificaciones
    const emailAddresses = ["termopilashuila@gmail.com"];
    
    // Configuraci√≥n espec√≠fica por tipo de evento
    // Priorizar el campo general nombres_organizacion
    const nombresGeneral = data.nombres_organizacion || '';
    
    const eventConfig = {
      'boda': {
        emoji: 'üíç',
        color: '#F29F05',
        nombre: nombresGeneral || data.nombres_novios || 'No especificado'
      },
      'quince a√±os': {
        emoji: 'üëë',
        color: '#e91e63',
        nombre: nombresGeneral || data.nombre_quincea√±era || 'No especificado'
      },
      'quincea√±era': {
        emoji: 'üëë',
        color: '#e91e63',
        nombre: nombresGeneral || data.nombre_quincea√±era || 'No especificado'
      },
      'retiro': {
        emoji: 'üßò‚Äç‚ôÄÔ∏è',
        color: '#4caf50',
        nombre: nombresGeneral || data.nombre_organizacion || 'No especificado'
      },
      'evento corporativo': {
        emoji: 'üè¢',
        color: '#2196f3',
        nombre: nombresGeneral || data.nombre_empresa || 'No especificado'
      }
    };
    
    const config = eventConfig[tipoEvento.toLowerCase()] || {
      emoji: 'üéâ',
      color: '#F29F05',
      nombre: 'No especificado'
    };
    
    // Asunto del correo
    const subject = `${config.emoji} Nueva Cotizaci√≥n de ${tipoEvento} - ${config.nombre} - Finca Term√≥pilas`;
    
    // URL del logo
    const logoUrl = "https://termopilas.co/assets/images/logo.png";
    
    // Calcular d√≠as hasta el evento
    let diasHastaEvento = '';
    if (data.fecha_evento) {
      const fechaEvento = new Date(data.fecha_evento);
      const hoy = new Date();
      const diferencia = Math.ceil((fechaEvento - hoy) / (1000 * 60 * 60 * 24));
      diasHastaEvento = diferencia > 0 ? `${diferencia} d√≠as` : 'Fecha pasada';
    }
    
    // Contenido HTML del correo
    const htmlBody = generateEmailHTML(data, tipoEvento, config, logoUrl, diasHastaEvento);
    
    // Versi√≥n de texto plano como respaldo
    const plainBody = generateEmailPlain(data, tipoEvento, config.emoji, diasHastaEvento);

    // Enviar el correo
    MailApp.sendEmail({
      to: emailAddresses.join(","),
      subject: subject,
      body: plainBody,
      htmlBody: htmlBody
    });
    
  } catch (emailError) {
    console.error('Error sending event notification email:', emailError);
  }
}

/**
 * Funci√≥n para generar el contenido HTML del correo
 */
function generateEmailHTML(data, tipoEvento, config, logoUrl, diasHastaEvento) {
  const template = loadTemplate('email');
  
  // Informaci√≥n espec√≠fica por tipo de evento
  // Priorizar el campo general nombres_organizacion
  const nombresGeneral = data.nombres_organizacion || '';
  
  let camposEspecificos = '';
  
  // Siempre mostrar el campo principal de nombres/organizaci√≥n
  const nombrePrincipal = nombresGeneral || 'No especificado';
  camposEspecificos += `
    <tr style="border-bottom: 1px solid #f0f0f0;">
      <td style="padding: 10px 0; font-weight: bold; color: #555;">üë§ Nombres/Organizaci√≥n:</td>
      <td style="padding: 10px 0; color: #333; font-size: 16px; font-weight: bold;">${nombrePrincipal}</td>
    </tr>`;
  
  switch (tipoEvento.toLowerCase()) {
    case 'boda':
      // Mostrar nombres de novios si es diferente del campo general
      if (data.nombres_novios && data.nombres_novios !== nombresGeneral) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üíë Novios:</td>
          <td style="padding: 10px 0; color: #333; font-size: 15px; font-weight: 600;">${data.nombres_novios}</td>
        </tr>`;
      }
      break;
    case 'quince a√±os':
    case 'quincea√±era':
      // Mostrar nombre de quincea√±era si es diferente del campo general
      if (data.nombre_quincea√±era && data.nombre_quincea√±era !== nombresGeneral) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üëë Quincea√±era:</td>
          <td style="padding: 10px 0; color: #333; font-size: 15px; font-weight: 600;">${data.nombre_quincea√±era}</td>
        </tr>`;
      }
      if (data.nombres_padres) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üë®‚Äçüë©‚Äçüëß Padres:</td>
          <td style="padding: 10px 0; color: #333; font-size: 15px; font-weight: 600;">${data.nombres_padres}</td>
        </tr>`;
      }
      if (data.tematica_preferida) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üé® Tem√°tica:</td>
          <td style="padding: 10px 0; color: #333; font-weight: 600;">${data.tematica_preferida}</td>
        </tr>`;
      }
      break;
    case 'retiro':
      if (data.tipo_retiro) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üßò‚Äç‚ôÄÔ∏è Tipo de Retiro:</td>
          <td style="padding: 10px 0; color: #333; font-weight: 600;">${data.tipo_retiro}</td>
        </tr>`;
      }
      break;
    case 'evento corporativo':
      // Mostrar nombre de empresa si es diferente del campo general
      if (data.nombre_empresa && data.nombre_empresa !== nombresGeneral) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üè¢ Empresa:</td>
          <td style="padding: 10px 0; color: #333; font-size: 15px; font-weight: 600;">${data.nombre_empresa}</td>
        </tr>`;
      }
      if (data.tipo_evento_corporativo) {
        camposEspecificos += `
        <tr style="border-bottom: 1px solid #f0f0f0;">
          <td style="padding: 10px 0; font-weight: bold; color: #555;">üéØ Tipo de Evento:</td>
          <td style="padding: 10px 0; color: #333; font-weight: 600;">${data.tipo_evento_corporativo}</td>
        </tr>`;
      }
      break;
  }
  
  // Crear secciones din√°micas
  let serviciosAdicionalesSection = '';
  if (data.servicios_adicionales) {
    serviciosAdicionalesSection = `
    <div style="background: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #F29F05;">
      <h3 style="color: #333; margin-top: 0; margin-bottom: 15px;">üéâ Servicios Adicionales Solicitados</h3>
      <p style="margin: 0; color: #333; font-size: 15px;">${data.servicios_adicionales}</p>
    </div>`;
  }
  
  let comentariosSection = '';
  if (data.comentarios) {
    comentariosSection = `
    <div style="background: #e8f5e9; padding: 20px; border-radius: 8px; margin-bottom: 25px; border-left: 4px solid #4caf50;">
      <h3 style="color: #333; margin-top: 0; margin-bottom: 15px;">üí¨ Comentarios y Solicitudes Especiales</h3>
      <p style="margin: 0; color: #333; font-style: italic; line-height: 1.6;">"${data.comentarios}"</p>
    </div>`;
  }
  
  // Crear URL de WhatsApp
  const whatsappUrl = `https://wa.me/${data.telefono ? data.telefono.replace(/\s/g, '').replace(/^\+/, '') : ''}?text=Hola, gracias por contactarnos para su ${tipoEvento.toLowerCase()} en Finca Term√≥pilas...`;
  
  // Reemplazos para la plantilla
  const replacements = {
    COLOR: config.color,
    LOGO_URL: logoUrl,
    EMOJI: config.emoji,
    TIPO_EVENTO: tipoEvento,
    FECHA_SOLICITUD: formatDateSpanish(new Date()),
    CAMPOS_ESPECIFICOS: camposEspecificos,
    EMAIL: data.email || 'No especificado',
    TELEFONO: data.telefono || 'No especificado',
    FECHA_EVENTO: data.fecha_evento ? formatDateSpanish(new Date(data.fecha_evento)) : 'No especificada',
    DIAS_HASTA_EVENTO: diasHastaEvento ? `(${diasHastaEvento})` : '',
    HORA_EVENTO: data.hora_evento || 'No especificada',
    NUMERO_INVITADOS: data.numero_invitados || 'No especificado',
    PRESUPUESTO: data.presupuesto || 'No especificado',
    ALOJAMIENTO_ICON: (data.requiere_alojamiento === 'S√≠') ? '‚úÖ' : '‚ùå',
    ALIMENTACION_ICON: (data.requiere_alimentacion === 'S√≠') ? '‚úÖ' : '‚ùå',
    MOBILIARIO_ICON: (data.requiere_mobiliario === 'S√≠') ? '‚úÖ' : '‚ùå',
    PLANEADOR_ICON: (data.requiere_planeador === 'S√≠') ? '‚úÖ' : '‚ùå',
    DECORACION_ICON: (data.requiere_decoracion === 'S√≠') ? '‚úÖ' : '‚ùå',
    SONIDO_ICON: (data.requiere_sonido === 'S√≠') ? '‚úÖ' : '‚ùå',
    FOTOGRAFIA_ICON: (data.requiere_fotografia === 'S√≠') ? '‚úÖ' : '‚ùå',
    AUDIOVISUALES_ICON: (data.requiere_audiovisuales === 'S√≠') ? '‚úÖ' : '‚ùå',
    SERVICIOS_ADICIONALES_SECTION: serviciosAdicionalesSection,
    COMENTARIOS_SECTION: comentariosSection,
    WHATSAPP_URL: whatsappUrl
  };
  
  return processTemplate(template, replacements);
}

/**
 * Funci√≥n para generar el contenido de texto plano del correo
 */
function generateEmailPlain(data, tipoEvento, emoji, diasHastaEvento) {
  // Priorizar el campo general nombres_organizacion
  const nombresGeneral = data.nombres_organizacion || '';
  
  // Siempre mostrar el campo principal
  const nombrePrincipal = nombresGeneral || 'No especificado';
  let camposEspecificos = `üë§ Nombres/Organizaci√≥n: ${nombrePrincipal}`;
  
  switch (tipoEvento.toLowerCase()) {
    case 'boda':
      if (data.nombres_novios && data.nombres_novios !== nombresGeneral) {
        camposEspecificos += `\nüíë Novios: ${data.nombres_novios}`;
      }
      break;
    case 'quince a√±os':
    case 'quincea√±era':
      if (data.nombre_quincea√±era && data.nombre_quincea√±era !== nombresGeneral) {
        camposEspecificos += `\nüëë Quincea√±era: ${data.nombre_quincea√±era}`;
      }
      if (data.nombres_padres) {
        camposEspecificos += `\nüë®‚Äçüë©‚Äçüëß Padres: ${data.nombres_padres}`;
      }
      if (data.tematica_preferida) {
        camposEspecificos += `\nüé® Tem√°tica: ${data.tematica_preferida}`;
      }
      break;
    case 'retiro':
      if (data.tipo_retiro) {
        camposEspecificos += `\nüßò‚Äç‚ôÄÔ∏è Tipo de Retiro: ${data.tipo_retiro}`;
      }
      break;
    case 'evento corporativo':
      if (data.nombre_empresa && data.nombre_empresa !== nombresGeneral) {
        camposEspecificos += `\nüè¢ Empresa: ${data.nombre_empresa}`;
      }
      if (data.tipo_evento_corporativo) {
        camposEspecificos += `\nüéØ Tipo de Evento: ${data.tipo_evento_corporativo}`;
      }
      break;
  }
  
  return `${emoji} NUEVA COTIZACI√ìN DE ${tipoEvento.toUpperCase()} - FINCA TERMOPILAS

üìã DETALLES DE LA SOLICITUD:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìÖ Fecha de solicitud: ${formatDateSpanish(new Date())}
üéâ Tipo de Evento: ${tipoEvento}
${camposEspecificos}
üìß Email: ${data.email || 'No especificado'}
üì± Tel√©fono: ${data.telefono || 'No especificado'}
üóìÔ∏è Fecha del evento: ${data.fecha_evento ? formatDateSpanish(new Date(data.fecha_evento)) : 'No especificada'}
üïê Hora del evento: ${data.hora_evento || 'No especificada'}
üë• N√∫mero de invitados: ${data.numero_invitados || 'No especificado'}
üí∞ Presupuesto: ${data.presupuesto || 'No especificado'}

üõéÔ∏è SERVICIOS REQUERIDOS:
${(data.requiere_alojamiento === 'S√≠') ? '‚úÖ' : '‚ùå'} Alojamiento
${(data.requiere_alimentacion === 'S√≠') ? '‚úÖ' : '‚ùå'} Alimentaci√≥n
${(data.requiere_mobiliario === 'S√≠') ? '‚úÖ' : '‚ùå'} Mobiliario (sillas, mesas)
${(data.requiere_planeador === 'S√≠') ? '‚úÖ' : '‚ùå'} Planeador del evento
${(data.requiere_decoracion === 'S√≠') ? '‚úÖ' : '‚ùå'} Decoraci√≥n
${(data.requiere_sonido === 'S√≠') ? '‚úÖ' : '‚ùå'} Sonido
${(data.requiere_fotografia === 'S√≠') ? '‚úÖ' : '‚ùå'} Fotograf√≠a profesional
${(data.requiere_audiovisuales === 'S√≠') ? '‚úÖ' : '‚ùå'} Equipos audiovisuales

${data.servicios_adicionales ? `üéâ SERVICIOS ADICIONALES:
${data.servicios_adicionales}

` : ''}${data.comentarios ? `üí¨ COMENTARIOS:
"${data.comentarios}"

` : ''}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üöÄ ACCIONES PENDIENTES:
‚Ä¢ Revisar disponibilidad de fecha
‚Ä¢ Preparar cotizaci√≥n personalizada
‚Ä¢ Contactar al cliente en 24-48h
‚Ä¢ Agendar visita a las instalaciones

üìû CONTACTO DIRECTO:
Email: ${data.email}
Tel√©fono: ${data.telefono}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
Finca Term√≥pilas - Rivera, Huila
termopilashuila@gmail.com`;
}

/**
 * Funci√≥n auxiliar para formatear fechas en espa√±ol
 */
function formatDateSpanish(date) {
  const options = { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
    timeZone: 'America/Bogota'
  };
  return date.toLocaleDateString('es-CO', options);
}
